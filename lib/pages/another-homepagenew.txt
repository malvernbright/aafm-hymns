import 'package:aafm_hymns/providers/hymn_provider.dart';
import 'package:aafm_hymns/widgets/exit_app.dart';
import 'package:convex_bottom_bar/convex_bottom_bar.dart';
import 'package:flutter/material.dart';
import 'package:google_nav_bar/google_nav_bar.dart';
import 'package:line_icons/line_icon.dart';
import 'package:line_icons/line_icons.dart';
import 'package:provider/provider.dart';

import 'about.dart';
import 'favourite_hymns.dart';
import 'hymns_list.dart';

class HomePage extends StatelessWidget {
  static final _widgetOptions = <Tab>[
    Tab(
      text: 'Favourite',
      icon: LineIcon(LineIcons.heart),
      child: const Favourites(),
    ),
    Tab(
      text: 'Hymns',
      icon: LineIcon(LineIcons.list),
      child: const HymnsList(),
    ),
    Tab(
      text: 'About',
      icon: LineIcon(LineIcons.info),
      child: const About(),
    )
  ];
  static final _kTabIcons = <String, IconData>{
    'Favourites': LineIcons.heart,
    'Hymns': LineIcons.list,
    'About': LineIcons.info
  };
  int page = 0;

  late TabController _tabController;

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: _widgetOptions.length,
      child: Builder(builder: (context) {
        final TabController? tabController = DefaultTabController.of(context);
        tabController?.addListener(() {
          if (!tabController.indexIsChanging) {
            // Your code goes here.
            // To get index of current tab use tabController.index
          }
        });
        return Scaffold(
          body: TabBarView(
            controller: _tabController,
            children: _widgetOptions.map((Tab tab) {
              final Widget widgetChild = tab.child!;
              return widgetChild;
            }).toList(),
          ),
          bottomNavigationBar: ConvexAppBar(
            controller: _tabController,
            style: TabStyle.react,
            items: const [
              TabItem(icon: LineIcons.heart),
              TabItem(icon: LineIcons.list),
              TabItem(icon: LineIcons.info),
            ],
            onTap: (int i) {},
            initialActiveIndex: 1,
          ),
        );
      }),
    );
  }
}

Scaffold(
                body: Center(
                  child: HomePage._widgetOptions.elementAt(_page),
                ),
                bottomNavigationBar: Container(
                  decoration: BoxDecoration(
                    color: Colors.green,
                    boxShadow: [
                      BoxShadow(
                        blurRadius: 20,
                        color: Colors.black.withOpacity(.1),
                      )
                    ],
                  ),
                  child: SafeArea(
                    child: Padding(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 15.0, vertical: 8),
                      child: GNav(
                        rippleColor: Colors.grey[300]!,
                        hoverColor: Colors.grey[100]!,
                        gap: 8,
                        activeColor: Colors.pink,
                        iconSize: 24,
                        padding: const EdgeInsets.symmetric(
                            horizontal: 20, vertical: 12),
                        duration: const Duration(milliseconds: 400),
                        tabBackgroundColor: Colors.grey[100]!,
                        color: Colors.white,
                        tabs: const [
                          GButton(
                            icon: LineIcons.school,
                            text: 'Hymns',
                          ),
                          GButton(
                            icon: LineIcons.heart,
                            text: 'Likes',
                          ),
                          GButton(
                            icon: LineIcons.infoCircle,
                            text: 'About',
                          ),
                        ],
                        selectedIndex: _page,
                        // provider.selectedIndex,
                        onTabChange: (index) {
                          setState(() {
                            _page = index;
                          });
                        },
                      ),
                    ),
                  ),
                ),
              ),